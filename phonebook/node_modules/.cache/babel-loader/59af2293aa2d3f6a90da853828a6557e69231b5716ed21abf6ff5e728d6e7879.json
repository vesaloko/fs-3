{"ast":null,"code":"import{useState,useEffect}from'react';import Persons from'./components/Persons';import PersonForm from'./components/PersonForm';import Filter from'./components/Filter';import Notification from'./components/Notification';import personService from'./services/persons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[persons,setPersons]=useState([]);const[newName,setNewName]=useState('');const[newNumber,setNewNumber]=useState('');const[filter,setFilter]=useState('');const[info,setInfo]=useState({message:null});useEffect(()=>{personService.getAll().then(initialPersons=>setPersons(initialPersons));},[]);const notifyWith=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setInfo({message,type});setTimeout(()=>{setInfo({message:null});},3000);};const cleanForm=()=>{setNewName('');setNewNumber('');};const updatePerson=person=>{const ok=window.confirm(\"\".concat(newName,\" is already added to phonebook, replace the number?\"));if(ok){personService.update(person.id,{...person,number:newNumber}).then(updatedPerson=>{setPersons(persons.map(p=>p.id!==person.id?p:updatedPerson));notifyWith(\"phon number of \".concat(person.name,\" updated!\"));}).catch(()=>{notifyWith(\"\".concat(person.name,\" has already been removed\"),'error');setPersons(persons.filter(p=>p.id!==person.id));});cleanForm();}};const addPerson=event=>{event.preventDefault();const person=persons.find(p=>p.name===newName);if(person){updatePerson(person);return;}personService.create({name:newName,number:newNumber}).then(createdPerson=>{setPersons(persons.concat(createdPerson));notifyWith(\"\".concat(createdPerson.name,\" added!\"));cleanForm();});};const removePerson=person=>{const ok=window.confirm(\"remove \".concat(person.name,\" from phonebook?\"));if(ok){personService.remove(person.id).then(()=>{setPersons(persons.filter(p=>p.id!==person.id));notifyWith(\"number of \".concat(person.name,\" deleted!\"));});}};const byFilterField=p=>p.name.toLowerCase().includes(filter.toLowerCase());const personsToShow=filter?persons.filter(byFilterField):persons;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(Notification,{info:info}),/*#__PURE__*/_jsx(Filter,{filter:filter,setFilter:setFilter}),/*#__PURE__*/_jsx(\"h3\",{children:\"Add a new\"}),/*#__PURE__*/_jsx(PersonForm,{addPerson:addPerson,newName:newName,newNumber:newNumber,setNewName:setNewName,setNewNumber:setNewNumber}),/*#__PURE__*/_jsx(\"h3\",{children:\"Phone numbers\"}),/*#__PURE__*/_jsx(Persons,{persons:personsToShow,removePerson:removePerson})]});};export default App;","map":{"version":3,"names":["useState","useEffect","Persons","PersonForm","Filter","Notification","personService","jsx","_jsx","jsxs","_jsxs","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","info","setInfo","message","getAll","then","initialPersons","notifyWith","type","arguments","length","undefined","setTimeout","cleanForm","updatePerson","person","ok","window","confirm","concat","update","id","number","updatedPerson","map","p","name","catch","addPerson","event","preventDefault","find","create","createdPerson","removePerson","remove","byFilterField","toLowerCase","includes","personsToShow","children"],"sources":["/Users/venla/fs-3/phonebook/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [info, setInfo] = useState({ message: null})\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons => \n      setPersons(initialPersons)\n    ))\n  }, [])\n\n  const notifyWith = (message, type='info') => {\n    setInfo({\n      message, type\n    })\n\n    setTimeout(() => {\n      setInfo({ message: null} )\n    }, 3000)\n  }\n\n  const cleanForm = () => {\n    setNewName('')\n    setNewNumber('') \n  }\n\n  const updatePerson = (person) => {\n    const ok = window.confirm(`${newName} is already added to phonebook, replace the number?`)\n    if (ok) {\n      \n      personService.update(person.id, {...person, number: newNumber}).then((updatedPerson) => {\n        setPersons(persons.map(p => p.id !== person.id ? p :updatedPerson ))\n        notifyWith(`phon number of ${person.name} updated!`)\n      })\n      .catch(() => {\n        notifyWith(`${person.name} has already been removed`, 'error')\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n\n      cleanForm()\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(p => p.name === newName)\n\n    if (person) {\n      updatePerson(person)\n      return\n    }\n\n    personService.create({\n      name: newName,\n      number: newNumber\n    }).then(createdPerson => {\n      setPersons(persons.concat(createdPerson))\n\n      notifyWith(`${createdPerson.name} added!`)\n\n      cleanForm()\n    })\n  }\n\n  const removePerson = (person) => {\n    const ok = window.confirm(`remove ${person.name} from phonebook?`)\n    if ( ok ) {\n      personService.remove(person.id).then( () => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        notifyWith(`number of ${person.name} deleted!`)\n      })\n    }\n  }\n\n  const byFilterField =\n    p => p.name.toLowerCase().includes(filter.toLowerCase())\n\n  const personsToShow = filter ? persons.filter(byFilterField) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification info={info} />\n\n      <Filter filter={filter} setFilter={setFilter} />\n      \n      <h3>Add a new</h3>\n\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n\n      <h3>Phone numbers</h3>\n\n      <Persons\n        persons={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}